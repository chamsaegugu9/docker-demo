현재 디렉터리 확인:
pwd

디렉터리 내용 확인:
ls
현재 디렉터리의 파일과 폴더 목록을 나열합니다.
옵션: ls -l (자세한 정보 표시), ls -a (숨긴 파일 포함)

디렉터리 변경:
cd <디렉터리 경로>

파일 생성:
touch <파일명>

디렉터리 생성:
mkdir <디렉터리명>

파일 삭제:
rm <파일명>

디렉터리 삭제:
rm -r <디렉터리명>

파일 복사:
cp <파일명> <목적지>

파일 이동:
mv <파일명> <목적지>

파일 내용 출력:
cat <파일명>

긴 파일 내용은 less나 more 명령어로 페이지 단위로 확인할 수 있습니다:
less <파일명>

파일 편집 (vim 사용 예시):
vim <파일명>
vim은 터미널에서 사용할 수 있는 강력한 텍스트 편집기입니다.
편집 후 저장하려면 :w를 입력하고, 종료하려면 :q를 입력합니다.

패키지 관리: APT
Ubuntu는 **APT (Advanced Packaging Tool)**를 통해 패키지를 관리합니다. APT를 사용하여 프로그램을 설치하고 업데이트할 수 있습니다.

패키지 목록 업데이트:
sudo apt update

패키지 설치:
sudo apt install <패키지명>
예: sudo apt install vim

설치된 패키지 확인:
dpkg -l | grep <패키지명>

패키지 삭제:
sudo apt remove <패키지명>

패키지 업데이트:
sudo apt upgrade

모든 패키지 업데이트:
sudo apt full-upgrade

불필요한 패키지 청소:
sudo apt autoremove

시스템 정보:
uname -a

CPU 정보:
lscpu

메모리 정보:
free -h

현재 실행 중인 프로세스 확인:
ps aux

시스템 리소스를 많이 사용하는 프로세스 확인:
top

특정 프로세스 종료:
kill <프로세스 ID>

디스크 용량 확인:
df -h

네트워크 상태 확인:
ifconfig

새로운 사용자 추가:
sudo adduser <사용자명>

사용자 삭제:
sudo deluser <사용자명>

사용자 그룹에 추가:
sudo usermod -aG <그룹명> <사용자명>

sudo 사용:
시스템 관리 작업을 할 때 sudo 명령어를 사용하여 관리자 권한으로 작업을 할 수 있습니다. 
예: sudo apt update

쉘 스크립트
Ubuntu에서 자주 수행하는 작업들을 자동화하려면 쉘 스크립트를 작성할 수 있습니다.

쉘 스크립트 작성:
nano script.sh

스크립트에 실행 권한 부여:
chmod +x script.sh

스크립트 실행:
./script.sh

파일 권한 변경:
chmod [옵션] [사용자] [권한] <파일명>

사용자:
u: 파일 소유자(user)
g: 파일 그룹(group)
o: 다른 사용자(others)
a: 모든 사용자(all)

권한:
r: 읽기 권한
w: 쓰기 권한
x: 실행 권한

파일 소유자에게만 실행 권한 부여:
chmod u+x example.sh

파일 소유자에게 읽기, 쓰기, 실행 권한 부여:
chmod u+rwx example.sh

파일 그룹과 다른 사용자에게 실행 권한만 부여:
chmod go+x example.sh

모든 사용자에게 읽기 권한 부여:
chmod a+r example.sh

숫자 방식
숫자 방식에서는 3자리 숫자로 권한을 설정합니다. 각 숫자는 읽기, 쓰기, 실행 권한을 의미합니다. 숫자는 다음과 같이 매핑됩니다:
r = 4, w = 2, x = 1
각각의 권한을 합산하여 숫자로 표현합니다.
권한 숫자 예시:
7 = rwx = 읽기 + 쓰기 + 실행 = 4 + 2 + 1
6 = rw- = 읽기 + 쓰기 = 4 + 2
5 = r-x = 읽기 + 실행 = 4 + 1
4 = r-- = 읽기만 = 4
3 = wx- = 쓰기 + 실행 = 2 + 1
2 = w-- = 쓰기만 = 2
1 = x-- = 실행만 = 1
0 = --- = 권한 없음
chmod [옵션] <숫자> <파일명>

예시:
소유자에게 읽기, 쓰기, 실행 권한을 부여하고, 그룹과 다른 사용자에게 읽기 권한만 부여:
chmod 744 example.sh
7 (소유자): rwx
4 (그룹): r--
4 (다른 사용자): r--

모든 사용자에게 읽기, 쓰기, 실행 권한을 부여:
chmod 777 example.sh

소유자에게 읽기, 쓰기 권한, 그룹과 다른 사용자에게 읽기 권한만 부여:
chmod 644 example.sh


파일권한:
-rwxr-xr-x 1 user user  4096 May 15 10:20 example.sh

첫 번째 칸: 파일 유형과 권한
-: 일반 파일
d: 디렉토리
l: 심볼릭 링크

다음 9칸: 파일의 권한
첫 번째 세 칸: **파일 소유자(user)**의 권한
두 번째 세 칸: **파일 그룹(group)**의 권한
세 번째 세 칸: **기타 사용자(others)**의 권한

예시 권한: rwxr-xr-x
첫 번째 rwx: 소유자가 읽기, 쓰기, 실행 권한을 가짐.
두 번째 r-x: 그룹 사용자가 읽기, 실행 권한만 있음.
세 번째 r-x: 다른 사용자가 읽기, 실행 권한만 있음.

파일 소유자 및 그룹 변경(chown):
chown <소유자>:<그룹> <파일명>

예시:
파일의 소유자만 변경:
chown newuser example.sh

파일의 소유자와 그룹 모두 변경:
chown newuser:newgroup example.sh

파일의 그룹만 변경:
chown :newgroup example.sh

백그라운드 프로세스 실행: 명령어 뒤에 &를 붙여서 프로세스를 백그라운드에서 실행할 수 있습니다.
./script.sh &

파일 찾기: find 명령어를 사용해 파일을 찾을 수 있습니다.
find /path/to/search -name "filename"

zip 파일 압축해제: 
unzip 파일이름.zip

unzip 파일이름.zip -d /경로/목표디렉토리

unzip 설치:
Debian/Ubuntu 기반 시스템 (예: Ubuntu, Linux Mint)
sudo apt-get install unzip

RHEL/CentOS 기반 시스템 (예: Red Hat, Fedora)
sudo yum install unzip

Arch Linux 기반 시스템 (예: Arch, Manjaro)
sudo pacman -S unzip